// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyDB;

namespace MyDB.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20220301121910_v1.7")]
    partial class v17
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DomainDTO.EFModels.Announcement_information", b =>
                {
                    b.Property<int>("Announcement_Fid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Announcement_attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Announcement_content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Announcement_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Announcement_title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Announcement_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("Announcement_Fid");

                    b.ToTable("Announcement_information");
                });

            modelBuilder.Entity("DomainDTO.EFModels.Chapter_information", b =>
                {
                    b.Property<int>("Chapter_Pid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Chapter_Accompanying")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Chapter_Checkedout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Chapter_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Chapter_applicant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Chapter_content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Chapter_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Chapter_department")
                        .HasColumnType("int");

                    b.Property<string>("Chapter_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Chapter_returndate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Chapter_sealname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("Chapter_Pid");

                    b.ToTable("Chapter_information");
                });

            modelBuilder.Entity("DomainDTO.EFModels.File_information", b =>
                {
                    b.Property<int>("File_Mid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("File_Archive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File_attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File_content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("File_department")
                        .HasColumnType("int");

                    b.Property<string>("File_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("File_Mid");

                    b.ToTable("File_information");
                });

            modelBuilder.Entity("DomainDTO.EFModels.Prints_information", b =>
                {
                    b.Property<int>("Prints_Rid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Prints_applicant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prints_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Prints_department")
                        .HasColumnType("int");

                    b.Property<string>("Prints_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prints_printsname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prints_tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prints_use")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("Prints_Rid");

                    b.ToTable("Prints_information");
                });
#pragma warning restore 612, 618
        }
    }
}
